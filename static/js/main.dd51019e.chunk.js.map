{"version":3,"sources":["mine/App.js","mine/actions/index.js","mine/reducer/listReducer.js","mine/reducer/index.js","index.js"],"names":["App","dispatch","useDispatch","itemList","useSelector","state","inputRef","React","createRef","window","onbeforeunload","e","type","renderedItemList","map","obj","ind","onClick","id","isDone","text","className","ref","onKeyDown","event","key","current","value","items","localStorage","getItem","setItem","JSON","stringify","parse","listReducer","action","newState","produce","draftState","console","log","newState2","push","allReducer","combineReducers","myStore","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","document","getElementById"],"mappings":"+NA+DeA,MAvDf,WACC,IAAMC,EAAWC,cACXC,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,YACxCG,EAAWC,IAAMC,YAGrBC,OAAOC,eAAiB,SAASC,GAChCV,ECOM,CACNW,KAAM,UDIP,IAAIC,EAAmBV,EAASW,KAAK,SAACC,EAAIC,GAAL,OAAa,wBAAIC,QAAW,kBAAMhB,EC1BhE,CACNW,KAAM,SACNM,GDwB8FF,MAA7C,IAAuDD,EAAII,OAAoB,2BAAIJ,EAAIK,MAAnBL,EAAIK,KAAxE,QAElD,OACA,yBAAKC,UAAY,aAChB,yBAAKA,UAAY,OAChB,yBAAKA,UAAY,UACf,yCACA,4BACER,KAML,yBAAKQ,UAAY,OAChB,yBAAKA,UAAY,UAChB,2BAAOT,KAAK,OAAOU,IAAOhB,EAAUiB,UAvBvC,SAAqBC,GACH,SAAbA,EAAMC,MACTxB,ECbK,CACNW,KAAM,MACNQ,KDWkBd,EAASoB,QAAQC,QAClCrB,EAASoB,QAAQC,MAAQ,QAsBzB,yBAAKN,UAAY,UAEhB,4BAAQA,UAAY,sBAAsBJ,QAAW,kBAAMhB,EC/BvD,CACNW,KAAM,YD8BJ,UACA,4BAAQS,UAAY,sBAAsBJ,QAAW,kBAAMhB,EC1BvD,CACNW,KAAM,WDyBJ,a,4BE1CAgB,EAAQ,CACZ,CAACR,KAAM,oBAAqBD,QAAQ,GACpC,CAACC,KAAM,wBAAyBD,QAAQ,GACxC,CAACC,KAAM,gCAAiCD,QAAQ,IAIV,MAAlCU,aAAaC,QAAQ,UACxBD,aAAaE,QAAQ,SAASC,KAAKC,UAAUL,IAE7CA,EAAQI,KAAKE,MAAML,aAAaC,QAAQ,WAIzC,IAmCeK,EAnCK,WAA4B,IAA3B9B,EAA0B,uDAAlBuB,EAAOQ,EAAW,uCAC9C,OAAOA,EAAOxB,MACb,IAAK,SACJ,IAAMyB,EAAWC,YAAQjC,GAAO,SAAAkC,GAC5BA,EAAWH,EAAOlB,IAAIC,QAAUoB,EAAWH,EAAOlB,IAAIC,UAI1D,OADAqB,QAAQC,IAAIJ,GACLA,EAER,IAAK,MACJ,GAAoB,KAAhBD,EAAOhB,KAAa,CACvB,IAAMsB,EAAYJ,YAAQjC,GAAO,SAAAkC,GAChCA,EAAWI,KAAK,CAACvB,KAAMgB,EAAOhB,KAAKD,QAAO,OAG3C,OAAOuB,EAEP,OAAOrC,EAIT,IAAK,QACJ,MAAO,GAER,IAAK,OAEJ,OADAwB,aAAaE,QAAQ,SAASC,KAAKC,UAAU5B,IACtCA,EAER,QACC,OAAOA,ICxCKuC,EALIC,YAAgB,CAClC1C,SAAWgC,ICINW,EAAUC,YAAYH,EAAWnC,OAAOuC,8BAAgCvC,OAAOuC,gCAErFC,IAASC,OAAQ,kBAAC,IAAD,CAAUC,MAASL,GAAS,kBAAC,EAAD,OAAkBM,SAASC,eAAe,W","file":"static/js/main.dd51019e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n//The Redux magic starts here. Access them anywhere directly without importting and stuff\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {toggleListItem, addItem, clearItems, saveItems} from './actions'\r\n\r\n\r\n\r\nfunction App() {\r\n\tconst dispatch = useDispatch()\r\n\tconst itemList = useSelector(state => state.itemList)\r\n\tlet inputRef = React.createRef()\r\n\r\n\t//close event\r\n\twindow.onbeforeunload = function(e) {\r\n\t\tdispatch(saveItems())\r\n\t}\r\n\r\n\r\n\t//Bruh.. very simple form handling. But don't overuse REF.\r\n\tfunction handleClick(event) {\r\n\t\tif (event.key == \"Enter\") {\r\n\t\t\tdispatch(addItem(inputRef.current.value))\r\n\t\t\tinputRef.current.value = \"\"\r\n\t\t}\r\n\t}\r\n\r\n\tlet renderedItemList = itemList.map( (obj,ind) => <li onClick = {() => dispatch(toggleListItem(ind))}> {!obj.isDone ? obj.text : <s>{obj.text}</s>} </li>)\r\n\r\n\treturn(\r\n\t<div className = 'container'>\r\n\t\t<div className = 'row'>\r\n\t\t\t<div className = 'column'>\r\n\t\t\t\t\t<h1> // TODO </h1>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{renderedItemList}\r\n\t\t\t\t\t\t\t \t\r\n\r\n\t\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div className = 'row'>\r\n\t\t\t<div className = 'column'>\r\n\t\t\t\t<input type='text' ref = {inputRef} onKeyDown = {handleClick}/>\r\n\t\t\t</div>\r\n\t\t\t<div className = 'column'>\r\n\t\t\t\t\r\n\t\t\t\t<button className = 'button button-clear' onClick = {() => dispatch(clearItems())}>CLEAR </button>\r\n\t\t\t\t<button className = 'button button-clear' onClick = {() => dispatch(saveItems())}>SAVE </button>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t\t \r\n\t\t</div> \r\n\r\n\r\n\t</div>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default App\t","export const toggleListItem = (id) => {\r\n\treturn {\r\n\t\ttype: \"TOGGLE\",\r\n\t\tid: id\r\n\t}\r\n\r\n}\r\n\r\nexport const addItem = (text) => {\r\n\treturn {\r\n\t\ttype: \"ADD\",\r\n\t\ttext: text\r\n\t}\r\n}\r\n\r\nexport const clearItems = () => {\r\n\treturn {\r\n\t\ttype: \"CLEAR\"\r\n\t}\r\n}\r\n\r\nexport const saveItems = () => {\r\n\treturn {\r\n\t\ttype: \"SAVE\"\r\n\t}\r\n}","//create ACTUAL FUNCTIONS, with FuncitonalNaming\r\n//goddamn with immuatabilty bull\r\n\r\nimport produce from 'immer'\r\n\r\n\r\nvar items = [\r\n{text: \"Add a thing to do\", isDone: false},\r\n{text: \"Click on it when done\", isDone: true},\r\n{text: \"Use clear to start a new list\", isDone: false}\r\n]\r\n\r\n//damn, LocalStorage? Give me a break..INIT and LOADING\r\nif (localStorage.getItem('myData') == null) {\r\n\tlocalStorage.setItem('myData',JSON.stringify(items))\r\n} else {\r\n\titems = JSON.parse(localStorage.getItem('myData'))\r\n}\r\n\r\n\r\nconst listReducer = (state = items, action) => {\r\n\tswitch(action.type) {\r\n\t\tcase \"TOGGLE\":\r\n\t\t\tconst newState = produce(state, draftState => {\r\n\t\t\t    draftState[action.id].isDone = !draftState[action.id].isDone\r\n\t\t\t})\r\n\r\n\t\t\tconsole.log(newState)\r\n\t\t\treturn newState;\r\n\r\n\t\tcase \"ADD\":\r\n\t\t\tif (action.text !== '') {\r\n\t\t\t\tconst newState2 = produce(state, draftState => {\r\n\t\t\t\t\tdraftState.push({text: action.text,isDone:false})\r\n\t\t\t\t\t\r\n\t\t\t\t})\r\n\t\t\t\treturn newState2\r\n\t\t\t} else {\r\n\t\t\t\treturn state;\r\n\t\t\t}\r\n\r\n\r\n\t\tcase \"CLEAR\":\r\n\t\t\treturn [];\r\n\r\n\t\tcase \"SAVE\":\r\n\t\t\tlocalStorage.setItem(\"myData\",JSON.stringify(state))\r\n\t\t\treturn state;\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\n\r\nexport default listReducer","import listReducer from './listReducer'\r\nimport {combineReducers} from 'redux'\r\n\r\n\r\n//Define the STORE/STATE/DB structure here.\r\nconst allReducer = combineReducers({\r\n\titemList : listReducer\r\n})\r\n\r\n\r\nexport default allReducer","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './mine/App.js'\nimport './index.css'\nimport './milligram.css' //okay\n\nimport {createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport allReducer from './mine/reducer'\n\nconst myStore = createStore(allReducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render( <Provider store = {myStore}><App/></Provider>,document.getElementById('root'))"],"sourceRoot":""}